require 'rubygems'
require 'pony'
 
module MyOrganization
  class EmailMe < Chef::Handler
    attr_accessor :to_address
    def initialize(to_address=nil)
      self.to_address   = to_address
    end
 
    def report

      status = success? ? "Successfull" : "Failed"      
      # The Node is available as +node+
      subject = "#{status} Chef run on node: #{node.name}, fqdn: #{node.fqdn}\n"
      # +run_status+ is a value object with all of the run status data
      message = "Information regarding Chef run on #{node.name}, #{node.fqdn}: <br> Formatted exception: #{run_status.formatted_exception} <br> Backtracke exception #{run_status.backtrace}<br> Elapsed time #{run_status.elapsed_time}"

      # Join the backtrace lines. Coerce to an array just in case.
      #message << Array(backtrace).join("\n")
 
      #Pony.mail(:from => "aa@aa.ba",:to => @to_address, :subject => subject, :body => message)
      Pony.mail({
  :to => self.to_address,
  :from => "cloudtrainingschef@gmail.com",
  :via => :smtp,
  :subject => subject, 
  :html_body => message,
  :via_options => {
    :address              => 'smtp.gmail.com',
    :port                 => '587',
    :enable_starttls_auto => true,
    :user_name            => 'cloudtrainingschef',
    :password             => 'florin0704',
    :authentication       => :plain, # :plain, :login, :cram_md5, no auth by default
    :domain               => "localhost.localdomain" # the HELO domain provided by the client to the server
  }
})

 
 
    end
  end
end